<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_DIGroup" Id="{72e1cdb9-eb19-4782-baf4-0e1bb72a4f23}" SpecialFunc="None">
    <Declaration><![CDATA[// Digital input group
FUNCTION_BLOCK FB_DIGroup EXTENDS FB_IOGroup IMPLEMENTS I_DIGroup
VAR
	aIn				: ARRAY [0..nMaxSize - 1] OF I_DigitalIn;	// Array of interfaces of digital inputs
	eMode			: E_DIGroupMode := E_DIGroupMode.ModeOR;	// Command mode of inputs in group (default = OR)
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{eb18254e-71c1-4db0-bb2c-c7b0f1fe1afd}" />
    <Folder Name="Properties" Id="{b289c316-110b-4a86-ab3f-e37593b6efd7}" />
    <Method Name="AddInput" Id="{f5831360-ecd4-4b7f-896b-6ea28b2a1689}" FolderPath="Methods\">
      <Declaration><![CDATA[// Add input to group
METHOD AddInput
VAR_INPUT
	IDI			: I_DigitalIn;		// Interface to digital input
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF nSize < nMaxSize THEN
	aIn[nSize] := IDI;
	nSize := nSize + 1;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute" Id="{bc13788b-7162-4a4c-b878-f4cf29980000}" FolderPath="Methods\">
      <Declaration><![CDATA[// Runs the execute method of all digital input FBs in the group.
// Make sure all digital output execute methods are called only once per PLC cyle
METHOD Execute
VAR
	i		: INT;		// Iterator variable
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Call the execute method of all digital inputs in the group
FOR i := 0 TO nSize - 1 DO
	aIn[i].Execute();
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetCommand" Id="{2b78f567-1cba-42d5-9981-be110793306e}" FolderPath="Methods\">
      <Declaration><![CDATA[// Determine the command from the inputs in the group
METHOD GetCommand : E_DICommand
VAR
	i				: INT;
	nActive			: INT;
	eCommand		: E_DICommand;
	sTemp			: STRING;
END_VAR
VAR_INST
	eState			: E_DIState;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Check at least one input is available
IF nSize > 0 THEN
	CASE eMode OF
	E_DIGroupMode.ModeOR:
		// Get command
		eCommand := E_DICommand.None;
		
		FOR i := 0 TO nSize - 1 DO
			// Find first command different from None
			IF aIn[i].Command <> E_DICommand.None THEN
				IF eCommand = E_DICommand.None THEN
					eCommand := aIn[i].Command;
					
					sTemp := 'OR command ';
					sTemp := CONCAT(sTemp, TO_STRING(eCommand));
					fbLogger.AddDebug(sTemp);
				END_IF
			END_IF
		END_FOR
		
		// Issue command
		GetCommand := eCommand;
		
	E_DIGroupMode.ModeAND:
		// Check states
		// Multiple buttons must have been active at the same time with the same state
		nActive := 0;
		FOR i := 0 TO nSize - 1 DO
			IF aIn[i].State <> E_DIState.Idle THEN
				IF eState = E_DIState.Idle THEN
					eState := aIn[i].State;
				END_IF
				IF aIn[i].State = eState THEN
					nActive := nActive + 1;
				END_IF
			END_IF
		END_FOR
		
		// Reset if all inactive
		IF nActive = 0 THEN
			eState := E_DIState.Idle;
		END_IF
		
		// Get command
		eCommand := E_DICommand.None;
		FOR i := 0 TO nSize - 1 DO
			// Find first command different from None
			IF aIn[i].Command <> E_DICommand.None THEN
				IF eCommand = E_DICommand.None THEN
					eCommand := aIn[i].Command;
				END_IF
			END_IF
		END_FOR
		
		IF eCommand <> E_DICommand.None THEN
			// All commands need to be the same
			// Assume command matches detected states
			IF nActive = nSize THEN
				GetCommand := eCommand;
				
				sTemp := 'AND command ';
				sTemp := CONCAT(sTemp, TO_STRING(eCommand));
				sTemp := CONCAT(sTemp, ' by ');
				sTemp := CONCAT(sTemp, INT_TO_STRING(nActive));
				sTemp := CONCAT(sTemp, ' inputs');
				fbLogger.AddDebug(sTemp);
			END_IF
		ELSE
			GetCommand := E_DICommand.None;
		END_IF
	END_CASE
ELSE
	GetCommand := E_DICommand.None;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetInput" Id="{75168c71-828c-421a-8720-068569aee660}" FolderPath="Methods\">
      <Declaration><![CDATA[// Get a specific input from the group
METHOD GetInput : I_DigitalIn
VAR_INPUT
	nInputIndex		: INT;		// Input index
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetInput := aIn[nInputIndex];]]></ST>
      </Implementation>
    </Method>
    <Property Name="Mode" Id="{e713cfbf-3c52-4291-9b94-1842cd4fa66c}" FolderPath="Properties\">
      <Declaration><![CDATA[// Set input group mode (default OR)
PROPERTY Mode : E_DIGroupMode]]></Declaration>
      <Set Name="Set" Id="{5775ec19-7c91-42e7-b18f-81c1a1502a37}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[eMode := Mode;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>